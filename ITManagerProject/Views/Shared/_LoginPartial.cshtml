@using Microsoft.AspNetCore.Identity
@using ITManagerProject.Managers
@using Microsoft.AspNetCore.Authorization
@using ITManagerProject.HelperTypes
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject OrganizationManager<Organization> OrganizationManager
@inject IAuthorizationService AuthorizationService
@if (SignInManager.IsSignedIn(User))
{
    var usr = await UserManager.GetUserAsync(User);
    var inOrganization = await OrganizationManager.CheckIfInAnyOrganizationAsync(usr);
    if (inOrganization)
    {
        if ((await AuthorizationService.AuthorizeAsync(User, PolicyTypes.Organization.ManageOrganization)).Succeeded)
        {
            <li class="nav-item">
                <a class="nav-link" asp-controller="Dashboard" asp-action="ManageOrganization">Zarzadzaj organiacja</a>
            </li>
            
        }
    }
    
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Overview">Witaj @usr.FirstName @usr.LastName!</a>
    </li>
    <li class="nav-item">
        <a class="btn btn-info" type="submit" asp-area="" asp-controller="Account" asp-action="Logout">Wyloguj</a>
    </li>
    
}
else
{
    <li class="nav-item">
        <a class="nav-link active" asp-area="" asp-controller="Account" asp-action="Login" asp-route-returnUrl="">Zaloguj</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Register">Zarejestruj</a>
    </li>
}




